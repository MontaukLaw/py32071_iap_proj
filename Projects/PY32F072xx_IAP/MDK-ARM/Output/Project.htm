<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Sat Aug 02 16:16:35 2025
<BR><P>
<H3>Maximum Stack Usage =        776 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; APP_Bootloader_ProtocolDetection &rArr; APP_WriteMemory &rArr; APP_WriteOption &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[14]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">ADC_COMP_IRQHandler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[14]">ADC_COMP_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[26]">CAN_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[11]">DMA1_Channel1_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[12]">DMA1_Channel2_3_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[13]">DMA1_Channel4_5_6_7_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[d]">EXTI0_1_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[e]">EXTI2_3_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[f]">EXTI4_15_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[b]">FLASH_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from py32f07x_it.o(i.HardFault_Handler) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[1f]">I2C1_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[20]">I2C2_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[10]">LCD_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from py32f07x_it.o(i.NMI_Handler) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[9]">PVD_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[6]">PendSV_Handler</a> from py32f07x_it.o(i.PendSV_Handler) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[c]">RCC_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[a]">RTC_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[21]">SPI1_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[22]">SPI2_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[5]">SVC_Handler</a> from py32f07x_it.o(i.SVC_Handler) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[7]">SysTick_Handler</a> from py32f07x_it.o(i.SysTick_Handler) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[29]">SystemInit</a> from system_py32f07x.o(i.SystemInit) referenced from startup_py32f072xx.o(.text)
 <LI><a href="#[1b]">TIM14_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[1c]">TIM15_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[1d]">TIM16_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[1e]">TIM17_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[15]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[16]">TIM1_CC_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[17]">TIM2_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[18]">TIM3_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[19]">TIM6_LPTIM1_DAC_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[1a]">TIM7_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[23]">USART1_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[24]">USART2_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[25]">USART3_4_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[27]">USB_IRQHandler</a> from py32f07x_it.o(i.USB_IRQHandler) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[8]">WWDG_IRQHandler</a> from startup_py32f072xx.o(.text) referenced from startup_py32f072xx.o(RESET)
 <LI><a href="#[2a]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_py32f072xx.o(.text)
 <LI><a href="#[28]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[0]">usbd_hid_custom_in_callback</a> from usbd_hid_inout_if.o(i.usbd_hid_custom_in_callback) referenced 2 times from usbd_hid_inout_if.o(.data)
 <LI><a href="#[1]">usbd_hid_custom_out_callback</a> from usbd_hid_inout_if.o(i.usbd_hid_custom_out_callback) referenced 2 times from usbd_hid_inout_if.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(.text)
</UL>
<P><STRONG><a name="[91]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[30]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[92]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[93]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[94]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[95]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[96]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM6_LPTIM1_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USART3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32f072xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_InitRx
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[78]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_custom_dfu_send_data
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_custom_dfu_read_data
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep0_setup_complete_handler
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_custom_dfu_send_data
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[9b]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>APP_Bootloader_Go</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, app_bootloader.o(i.APP_Bootloader_Go))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Go
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>APP_Bootloader_Init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_bootloader.o(i.APP_Bootloader_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = APP_Bootloader_Init &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_InitTx
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendByte
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>APP_Bootloader_ProtocolDetection</STRONG> (Thumb, 524 bytes, Stack size 72 bytes, app_bootloader.o(i.APP_Bootloader_ProtocolDetection))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = APP_Bootloader_ProtocolDetection &rArr; APP_WriteMemory &rArr; APP_WriteOption &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteOption
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_ReadData
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteProtect
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteMemory
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ReadMemory
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Go
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ExtendedErase
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendData
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendByte
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SetFlashParameter
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>APP_Bootloader_ReadByte</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_bootloader.o(i.APP_Bootloader_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_Bootloader_ReadByte &rArr; APP_Bootloader_ReadData &rArr; APP_USART_ReadData &rArr; app_blink &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteProtect
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteMemory
</UL>

<P><STRONG><a name="[40]"></a>APP_Bootloader_ReadData</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, app_bootloader.o(i.APP_Bootloader_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_Bootloader_ReadData &rArr; APP_USART_ReadData &rArr; app_blink &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_ReadData
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_I2C_ReadData
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_custom_dfu_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteProtect
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteMemory
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ReadMemory
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ExtendedErase
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadByte
</UL>

<P><STRONG><a name="[33]"></a>APP_Bootloader_SendByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_bootloader.o(i.APP_Bootloader_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteOption
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ReadMemory
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_Init
</UL>

<P><STRONG><a name="[3e]"></a>APP_Bootloader_SendData</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, app_bootloader.o(i.APP_Bootloader_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_SendData
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_I2C_SendData
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_custom_dfu_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ReadMemory
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendByte
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[3b]"></a>APP_ExtendedErase</STRONG> (Thumb, 198 bytes, Stack size 96 bytes, app_bootloader.o(i.APP_ExtendedErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = APP_ExtendedErase &rArr; APP_MassErase &rArr; APP_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SectorErase
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PageErase
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MassErase
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetXOR
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[48]"></a>APP_GetXOR</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_bootloader.o(i.APP_GetXOR))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteProtect
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteMemory
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ExtendedErase
</UL>

<P><STRONG><a name="[39]"></a>APP_Go</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_bootloader.o(i.APP_Go))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = APP_Go &rArr; GetAddressArea &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DeInitInterface
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_Go
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[43]"></a>APP_I2C_ReadData</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_i2c.o(i.APP_I2C_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_I2C_ReadData
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
</UL>

<P><STRONG><a name="[46]"></a>APP_I2C_SendData</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, app_i2c.o(i.APP_I2C_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_I2C_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendData
</UL>

<P><STRONG><a name="[49]"></a>APP_MassErase</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, app_flash.o(i.APP_MassErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_MassErase &rArr; APP_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SectorErase
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ExtendedErase
</UL>

<P><STRONG><a name="[4c]"></a>APP_PageErase</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, app_flash.o(i.APP_PageErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_PageErase
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ExtendedErase
</UL>

<P><STRONG><a name="[38]"></a>APP_ReadMemory</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, app_bootloader.o(i.APP_ReadMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = APP_ReadMemory &rArr; GetAddressArea &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendData
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendByte
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[4d]"></a>APP_SectorErase</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, app_flash.o(i.APP_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = APP_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_MassErase
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ExtendedErase
</UL>

<P><STRONG><a name="[32]"></a>APP_USART_InitTx</STRONG> (Thumb, 168 bytes, Stack size 12 bytes, app_usart.o(i.APP_USART_InitTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = APP_USART_InitTx
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_Init
</UL>

<P><STRONG><a name="[5c]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32f07x_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>

<P><STRONG><a name="[55]"></a>APP_USART_InitRx</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, app_usart.o(i.APP_USART_InitRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = APP_USART_InitRx &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>APP_USART_ReadData</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, app_usart.o(i.APP_USART_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_USART_ReadData &rArr; app_blink &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_blink
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[44]"></a>APP_USART_SendData</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_usart.o(i.APP_USART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_USART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendData
</UL>

<P><STRONG><a name="[58]"></a>APP_WDG_Init</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, app_wdg.o(i.APP_WDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = APP_WDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>APP_WDG_Refresh</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_wdg.o(i.APP_WDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteFlash
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_SendData
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_ReadData
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SectorErase
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PageErase
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_I2C_SendData
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_I2C_ReadData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_custom_dfu_send_data
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_custom_dfu_read_data
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_Init
</UL>

<P><STRONG><a name="[59]"></a>APP_WriteFlash</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, app_flash.o(i.APP_WriteFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_WriteFlash
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteMemory
</UL>

<P><STRONG><a name="[3a]"></a>APP_WriteMemory</STRONG> (Thumb, 140 bytes, Stack size 536 bytes, app_bootloader.o(i.APP_WriteMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = APP_WriteMemory &rArr; APP_WriteOption &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteOption
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteFlash
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddressArea
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetXOR
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[3d]"></a>APP_WriteOption</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, app_flash.o(i.APP_WriteOption))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = APP_WriteOption &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteProtect
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteMemory
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[3c]"></a>APP_WriteProtect</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, app_bootloader.o(i.APP_WriteProtect))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = APP_WriteProtect &rArr; APP_WriteOption &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteOption
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetXOR
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[5a]"></a>BSP_LED_Init</STRONG> (Thumb, 64 bytes, Stack size 48 bytes, py32f072xx_start_kit.o(i.BSP_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>BSP_LED_Toggle</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, py32f072xx_start_kit.o(i.BSP_LED_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_blink
</UL>

<P><STRONG><a name="[5f]"></a>BSP_PB_GetState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, py32f072xx_start_kit.o(i.BSP_PB_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PB_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>BSP_PB_Init</STRONG> (Thumb, 102 bytes, Stack size 48 bytes, py32f072xx_start_kit.o(i.BSP_PB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BSP_PB_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>GetAddressArea</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, app_bootloader.o(i.GetAddressArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GetAddressArea &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GetXOR
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendByte
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WriteMemory
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ReadMemory
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Go
</UL>

<P><STRONG><a name="[5b]"></a>HAL_GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 20 bytes, py32f07x_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>

<P><STRONG><a name="[60]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32f07x_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
</UL>

<P><STRONG><a name="[5e]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32f07x_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>

<P><STRONG><a name="[69]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, py32f07x_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[6d]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32f07x_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[64]"></a>HAL_Init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, py32f07x_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>HAL_InitTick</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, py32f07x_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[66]"></a>HAL_MspInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, py32f07x_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[63]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32f07x_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
</UL>

<P><STRONG><a name="[62]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32f07x_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[54]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, py32f07x_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[6a]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, py32f07x_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[52]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1168 bytes, Stack size 48 bytes, py32f07x_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHSIFreq
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[67]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, py32f07x_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f07x_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f07x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f07x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32f07x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32f07x_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SystemInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system_py32f07x.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>USBD_IRQHandler</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, usb_dc_py32.o(i.USBD_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = USBD_IRQHandler &rArr; handle_ep0 &rArr; usbd_event_ep0_setup_complete_handler &rArr; usbd_setup_request_handler &rArr; usbd_standard_request_handler &rArr; usbd_std_interface_req_handler &rArr; usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_write_packet
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_set_active_ep
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_read_packet
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_get_active_ep
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_ep0
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_reset_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_out_complete_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_in_complete_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IRQHandler
</UL>

<P><STRONG><a name="[27]"></a>USB_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32f07x_it.o(i.USB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = USB_IRQHandler &rArr; USBD_IRQHandler &rArr; handle_ep0 &rArr; usbd_event_ep0_setup_complete_handler &rArr; usbd_setup_request_handler &rArr; usbd_standard_request_handler &rArr; usbd_std_interface_req_handler &rArr; usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32f072xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_bootloader.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendData
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DeInitInterface
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_interface_req_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_device_req_handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_ep0
</UL>

<P><STRONG><a name="[9f]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[57]"></a>app_blink</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_usart.o(i.app_blink))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_blink &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_ReadData
</UL>

<P><STRONG><a name="[4b]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ExtendedErase
</UL>

<P><STRONG><a name="[42]"></a>hid_custom_dfu_read_data</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usbd_hid_inout_if.o(i.hid_custom_dfu_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hid_custom_dfu_read_data
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ReadData
</UL>

<P><STRONG><a name="[45]"></a>hid_custom_dfu_send_data</STRONG> (Thumb, 128 bytes, Stack size 88 bytes, usbd_hid_inout_if.o(i.hid_custom_dfu_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_write
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Refresh
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_SendData
</UL>

<P><STRONG><a name="[28]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = main &rArr; APP_Bootloader_ProtocolDetection &rArr; APP_WriteMemory &rArr; APP_WriteOption &rArr; APP_Bootloader_SendByte &rArr; APP_Bootloader_SendData &rArr; hid_custom_dfu_send_data &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_WDG_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USART_InitRx
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_Go
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4a]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_ExtendedErase
</UL>

<P><STRONG><a name="[7a]"></a>usbd_configure_done_callback</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbd_hid_inout_if.o(i.usbd_configure_done_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usbd_configure_done_callback &rArr; usbd_ep_start_read
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_read
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_device_req_handler
</UL>

<P><STRONG><a name="[7c]"></a>usbd_ep_clear_stall</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, usb_dc_py32.o(i.usbd_ep_clear_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_ep_clear_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_set_active_ep
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_get_active_ep
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_endpoint_req_handler
</UL>

<P><STRONG><a name="[84]"></a>usbd_ep_close</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb_dc_py32.o(i.usbd_ep_close))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_reset_endpoint
</UL>

<P><STRONG><a name="[7d]"></a>usbd_ep_open</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, usb_dc_py32.o(i.usbd_ep_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_set_active_ep
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_get_fifo_size
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_get_active_ep
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_endpoint
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_reset_handler
</UL>

<P><STRONG><a name="[7f]"></a>usbd_ep_set_stall</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usb_dc_py32.o(i.usbd_ep_set_stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_ep_set_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_set_active_ep
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_get_active_ep
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_endpoint_req_handler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_out_complete_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep0_setup_complete_handler
</UL>

<P><STRONG><a name="[7b]"></a>usbd_ep_start_read</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, usb_dc_py32.o(i.usbd_ep_start_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ep_start_read
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_set_active_ep
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_get_active_ep
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_configure_done_callback
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_hid_custom_out_callback
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_out_complete_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_in_complete_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep0_setup_complete_handler
</UL>

<P><STRONG><a name="[79]"></a>usbd_ep_start_write</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, usb_dc_py32.o(i.usbd_ep_start_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_write_packet
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_set_active_ep
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_get_active_ep
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_custom_dfu_send_data
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_out_complete_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_in_complete_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep0_setup_complete_handler
</UL>

<P><STRONG><a name="[77]"></a>usbd_event_ep0_setup_complete_handler</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_event_ep0_setup_complete_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = usbd_event_ep0_setup_complete_handler &rArr; usbd_setup_request_handler &rArr; usbd_standard_request_handler &rArr; usbd_std_interface_req_handler &rArr; usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_write
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_read
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_handler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_set_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_ep0
</UL>

<P><STRONG><a name="[74]"></a>usbd_event_ep_in_complete_handler</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_event_ep_in_complete_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usbd_event_ep_in_complete_handler &rArr; usbd_ep_start_write
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_write
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_read
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_ep0
</UL>

<P><STRONG><a name="[76]"></a>usbd_event_ep_out_complete_handler</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_event_ep_out_complete_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = usbd_event_ep_out_complete_handler &rArr; usbd_setup_request_handler &rArr; usbd_standard_request_handler &rArr; usbd_std_interface_req_handler &rArr; usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_write
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_read
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_set_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_ep0
</UL>

<P><STRONG><a name="[70]"></a>usbd_event_reset_handler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_event_reset_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = usbd_event_reset_handler &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_class_event_notify_handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_address
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_open
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>usbd_set_address</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb_dc_py32.o(i.usbd_set_address))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_device_req_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_reset_handler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[50]"></a>APP_SystemClockConfig</STRONG> (Thumb, 96 bytes, Stack size 80 bytes, main.o(i.APP_SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = APP_SystemClockConfig &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[0]"></a>usbd_hid_custom_in_callback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_hid_inout_if.o(i.usbd_hid_custom_in_callback))
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_inout_if.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>usbd_hid_custom_out_callback</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbd_hid_inout_if.o(i.usbd_hid_custom_out_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usbd_hid_custom_out_callback &rArr; usbd_ep_start_read
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_inout_if.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>APP_DeInitInterface</STRONG> (Thumb, 300 bytes, Stack size 8 bytes, app_bootloader.o(i.APP_DeInitInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_DeInitInterface &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Go
</UL>

<P><STRONG><a name="[37]"></a>APP_SetFlashParameter</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, app_bootloader.o(i.APP_SetFlashParameter))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Bootloader_ProtocolDetection
</UL>

<P><STRONG><a name="[68]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, py32f07x_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[6c]"></a>RCC_GetHSIFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32f07x_hal_rcc.o(i.RCC_GetHSIFreq))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[90]"></a>is_device_configured</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbd_core.o(i.is_device_configured))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_interface_req_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_endpoint_req_handler
</UL>

<P><STRONG><a name="[82]"></a>usbd_class_event_notify_handler</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_class_event_notify_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_class_event_notify_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_device_req_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_interface
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_reset_handler
</UL>

<P><STRONG><a name="[8a]"></a>usbd_class_request_handler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_class_request_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_class_request_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_handler
</UL>

<P><STRONG><a name="[8f]"></a>usbd_get_descriptor</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, usbd_core.o(i.usbd_get_descriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usbd_get_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_device_req_handler
</UL>

<P><STRONG><a name="[89]"></a>usbd_print_setup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_core.o(i.usbd_print_setup))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_handler
</UL>

<P><STRONG><a name="[83]"></a>usbd_reset_endpoint</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_reset_endpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usbd_reset_endpoint
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_close
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_interface
</UL>

<P><STRONG><a name="[85]"></a>usbd_set_configuration</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, usbd_core.o(i.usbd_set_configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = usbd_set_configuration &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_endpoint
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_device_req_handler
</UL>

<P><STRONG><a name="[86]"></a>usbd_set_endpoint</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_set_endpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_open
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_interface
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_configuration
</UL>

<P><STRONG><a name="[87]"></a>usbd_set_interface</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, usbd_core.o(i.usbd_set_interface))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_endpoint
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_reset_endpoint
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_class_event_notify_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_interface_req_handler
</UL>

<P><STRONG><a name="[80]"></a>usbd_setup_request_handler</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, usbd_core.o(i.usbd_setup_request_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = usbd_setup_request_handler &rArr; usbd_standard_request_handler &rArr; usbd_std_interface_req_handler &rArr; usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_vendor_request_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_standard_request_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_print_setup
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_class_request_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_out_complete_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep0_setup_complete_handler
</UL>

<P><STRONG><a name="[88]"></a>usbd_standard_request_handler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_standard_request_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = usbd_standard_request_handler &rArr; usbd_std_interface_req_handler &rArr; usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_interface_req_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_endpoint_req_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_std_device_req_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_handler
</UL>

<P><STRONG><a name="[8c]"></a>usbd_std_device_req_handler</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_std_device_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = usbd_std_device_req_handler &rArr; usbd_set_configuration &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_configure_done_callback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_configuration
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_get_descriptor
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_class_event_notify_handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_address
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_standard_request_handler
</UL>

<P><STRONG><a name="[8e]"></a>usbd_std_endpoint_req_handler</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, usbd_core.o(i.usbd_std_endpoint_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usbd_std_endpoint_req_handler &rArr; usbd_ep_set_stall
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_device_configured
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_set_stall
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_clear_stall
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_standard_request_handler
</UL>

<P><STRONG><a name="[8d]"></a>usbd_std_interface_req_handler</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, usbd_core.o(i.usbd_std_interface_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = usbd_std_interface_req_handler &rArr; usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_set_interface
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_device_configured
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_standard_request_handler
</UL>

<P><STRONG><a name="[8b]"></a>usbd_vendor_request_handler</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_vendor_request_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_vendor_request_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_setup_request_handler
</UL>

<P><STRONG><a name="[72]"></a>handle_ep0</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, usb_dc_py32.o(i.handle_ep0))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = handle_ep0 &rArr; usbd_event_ep0_setup_complete_handler &rArr; usbd_setup_request_handler &rArr; usbd_standard_request_handler &rArr; usbd_std_interface_req_handler &rArr; usbd_set_interface &rArr; usbd_set_endpoint &rArr; usbd_ep_open
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pyusb_read_packet
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_out_complete_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep_in_complete_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_event_ep0_setup_complete_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>pyusb_get_active_ep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_dc_py32.o(i.pyusb_get_active_ep))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_write
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_read
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_set_stall
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_open
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_clear_stall
</UL>

<P><STRONG><a name="[7e]"></a>pyusb_get_fifo_size</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb_dc_py32.o(i.pyusb_get_fifo_size))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_open
</UL>

<P><STRONG><a name="[75]"></a>pyusb_read_packet</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_dc_py32.o(i.pyusb_read_packet))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handle_ep0
</UL>

<P><STRONG><a name="[71]"></a>pyusb_set_active_ep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb_dc_py32.o(i.pyusb_set_active_ep))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_write
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_read
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_set_stall
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_open
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_clear_stall
</UL>

<P><STRONG><a name="[73]"></a>pyusb_write_packet</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usb_dc_py32.o(i.pyusb_write_packet))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_start_write
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_IRQHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
